---
- name: Set fallback value for if distribution is not defined
  set_fact:
    ansible_distribution: '{{ ansible_lsb["id"] }}'
  when:
    - ansible_distribution is not defined

- name: Fail if Operating System is not Supported
  fail:
    msg: "Supported Operating System is Debian 64-bit"
  when:
    - ansible_distribution != 'Debian'
    - ansible_architecture != 'x86_64'

- name: Parse K3S Version Number from Vars
  set_fact:
    k3s_version_number: "{{ k3s_version.split('+')[0] }}"

- name: Parse K3S Version Parts from Vars
  set_fact:
    k3s_version_parts: "{{ k3s_version_number.split('.') }}"

- name: Ensure K3S Version Parts Have Same Length
  set_fact:
    k3s_version_vars: "{{ k3s_version_parts + ['0'] * (3 - k3s_version_parts|length) }}"
    k3s_version_compare: "{{ ['1', '25', '0'] }}"

- name: Ensure K3S Version Policy to Use
  set_fact:
    k3s_version_policy_new: >
      {% set result = false %}
      {% set done = false %}
      {% for a, b in zip(k3s_version_vars, k3s_version_compare) %}
      {% if not done %}
        {% if a|int > b|int %}
          {% set result = true %}
          {% set done = true %}
        {% elif a|int < b|int %}
          {% set result = false %}
          {% set done = true %}
        {% endif %}
      {% endif %}
      {% endfor %}
      {{ result }}

- name: Check Required Variable 'block_device' if 'enable_zfs' or 'enable_lvm'
  fail: 
    msg: "Required Variable 'block_device' is Required"
  when:
    - enable_zfs == 'true' or enable_lvm == 'true'
    - block_device is not defined

- name: Make Sure 'enable_lvm' is false When 'enable_zfs' is true
  set_fact:
    enable_lvm: 'false'
  when:
    - enable_zfs == 'true'

- name: Make Sure 'enable_zfs' is false When 'enable_lvm' is true
  set_fact:
    enable_zfs: 'false'
  when:
    - enable_lvm == 'true'
